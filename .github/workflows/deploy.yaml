name: Deployment

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-${{ hashFiles('.ci/*.sh') }}

      - name: Run Tests
        run: ./.ci/test.sh
        shell: bash

  archive:
    needs: test
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.11.13'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-${{ hashFiles('.ci/*.sh') }}

      - name: Archive
        run: ./.ci/archive.sh
        shell: bash

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./public.tar.gz
          asset_name: public.tar.gz
          asset_content_type: application/gzip

  deploy:
    needs: archive
    runs-on: ubuntu-20.04
    environment: Deployment

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-${{ hashFiles('.ci/*.sh') }}

      # TODO: Move to https://github.com/aws-actions/configure-aws-credentials
      - name: Deploy
        run: ./.ci/deploy.sh
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
