# Build, test and deploy website via Travis

os: linux
dist: xenial
language: generic

addons:
  apt:
    packages:
      - language-pack-en
      # For hunspell
      - autoconf
      - automake
      - autopoint
      - libtool
      - g++

branches:
  except:
    - gh-pages
    - /^untagged/

env:
  global:
    - HUGO_VERSION=0.55.3
    - HUGO_HASH=9fc60526460aa3d59867ae3011e5824fa4178a2c509f5303aeb75aba59f086af

before_install:
  # Set to fail on errors
  - set -o errexit && set -o pipefail
  # Install Hugo
  - .travis/install_hugo.sh "${HOME}/.local"
  # Install AWS CLI
  - .travis/install_awscli.sh
  # Install Hunspell
  - .travis/install_hunspell.sh
  # Export new tools to PATH
  - export PATH="${HOME}/.local/bin:${PATH}"
  - export LD_LIBRARY_PATH="${HOME}/.local/lib:${LD_LIBRARY_PATH}"
  # Export dictionaries and lang
  - export DICPATH="$(pwd)/libreoffice_dictionaries/en"
  - export DICTIONARY='en_GB'
  - export WORDLIST="$(pwd)/.hunspell_default"
  # Log the versions and paths
  - hugo version
  - aws --version
  - hunspell --version
  - hunspell -D -a /dev/null || true
  # Reset shell
  - set +o errexit && set +o pipefail

jobs:
  include:
    # Build site to test it works
    - stage: Test
      script:
        # Set to fail on errors
        - set -o errexit && set -o pipefail
        # Test the site builds
        - hugo -s site
        # Spell Check
        - git log --format="%H" >> .hunspell_default
        - find site/public -type f -name "*.html" -print0 | xargs -0 -I{} .travis/spell_check.sh "{}"
        # Reset shell
        - set +o errexit && set +o pipefail

    # Add archive of site to GitHub via releases
    - stage: Archive
      if: branch = master AND type != pull_request
      script:
        - hugo -s site
      before_deploy:
        - tar -czvf public.tar.gz site/public
      deploy:
        provider: releases
        api_key: "${GITHUB_TOKEN}"
        file: public.tar.gz
        skip_cleanup: true

    # Upload to S3 for public CDN
    - stage: Deploy
      if: branch = master AND type != pull_request
      script:
        - hugo -s site
      deploy:
        provider: script
        script:
          # Requires AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
          - aws s3 sync 'site/public' 's3://com.thebiggerguy.www' --region='eu-west-1' --acl='private' --delete
        skip_cleanup: true
      after_deploy:
        - aws cloudfront create-invalidation --distribution-id "${AWS_CLOUDFRONT_DISTRIBUTION_ID}" --paths '/*'

cache:
  directories:
    - ${HOME}/.local

